//Find numbers with even number of digits from an array 
//Steps:
//1. Find number of digits in a number-- Convert number to string and calculate length.
//2. Conevrt back to integer and filter values divisible by 2.
//3. Return length of this new array

var findNumbers = function(nums) {

    return  nums.filter(num => +(num.toString().length) % 2 === 0).length;
};

console.log(findNumbers([18977,80729,29529,94387,3435,64434,30329,91280,24716,37188,10335,37752,12498,19851,47040,11447,83079,73946,91614,19891,21866,5389,93539,52410,13081,81712,61265,2060,39874,95575,68761,19726,74470,4580,95643,8879,46641,41998,14820,19566,37054,43388,17930,59678,93776,81960,50800,95177,5255,56508,27312,36019,3098,72409,45130,30597,83823,83328,14405,3045,75604,69432,96413,87514,46040,18827,80555,18553,6536,68974,53093,31806,38318,43610,62648,7306,79475,55820,45948,95177,86163,11087,64310,69038,81767,73383,61509,38567,38661,85187,26148,18554,82441,85897,46053,64836,52354,28603,10485,73216,87728,96448,58155,62360,93020,45395,97691,61942,61604,53070,33380,3186,53937,39809,96812,21899,4842,10666,86774,36413,22236,75580,68193,49447,66454,74535,40280,81032,26378,25985,38254,36658,30765,26111,88359,69611,4938,53233,38527,56018,73252,55559,93998,18396,50877,88395,98271,74059,1826,54143,74540,52427,47627,28499,16970,38901,49772,3561,18111,22620,78588,92559,47556,47151,21375,71997,35034,51765,78605,30868,91283,58702,25551,67486,49900,82198,67360,60897,92551,89260,23779,47768,65270,61783,29306,24803,49764,23235,77538,59006,75868,60041,56299,11193,25174,26001,33196,97838,92592,65794,54763,37980,33128,27872,32745,40374,59215,89341,8705,43369,2535,24175,54399,67951,95269,13902,56639,87789,17080,25997,79138,12765,20893,68289,2068,51477,82619,48306,98190,62128,803,16539,49883,71791,54185,12816,13871,51770,17529,96234,59978,63079,19937,27429,8601,73322,47438,11915,67800,13700,6804,22639,44203,54271,92191,17559,35105,97984,54923,83414,2381,11681,55371,72426,19907,75173,88763,47929,51011,86786,64089,57991,97426,53514,93608,527,26175,2294,41419,96822,87280,93693,95927,84358,74351,62250,66084,31691,63681,95189,15967,12742,11368,71469,59059,35489,7803,28369,13171,74393,77785,7047,37029,38103,29615,26663,36966,36308,35606,34611,15816,69570,71355,13542,93185,43349,70262,47107,54389,45283,71609,11605,52367,79789,65002,56991,30250,7578,49554,47424,15281,81586,33467,31316,68888,44888,22093,95732,81242,98537,28583,93565,63750,30586,67202,30408,43186,21116,19090,49268,77099,85492,80881,9375,47582,17675,2402,26504,34986,20857,98555,19326,95781,6418,55797,90730,22930,43613,59744,15288,11266,13946,18885,25145,96351,83183,82031,13968,49513,26404,61125,67787,14719,78579,41010,82254,64216,91838,63453,22581,43509,57581,36976,229,55731,83739,3309,95980,95740,97177,59680,31134,9499,27296,12602,91930,1619,80991,94476,67480,51721,27520,81001,18375,14806,10763,44833,51448,50270,25136,62687,19693,24359,1005,69515,16721,2853,66195,51984,76692,72223,99484,96289,38536,32948,15068,34817,64309,65889,691,67038,84210,84098,59347,6729,98276]));

